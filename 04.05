#include <iostream>
#include <string>
#include <conio.h>
#include <Windows.h>
using namespace std;



struct characteristic
{
	string name;
	string surname;
	short year;
	short month;
	short day;

	void input()
	{
		cout << "Name - ";
		cin >> name;
		cout << "Surname - ";
		cin >> surname;
		cout << "Year of birth - ";
		cin >> year;
		while (year > 2019 || year < 1)
		{
			cout << "Enter again - ";
			cin >> year;
		}
		cout << "Month of birth - ";
		cin >> month;
		while (month > 12 || month < 1)
		{
			cout << "Enter again - ";
			cin >> month;
		}
		cout << "Day of birth - ";
		cin >> day;
		while (day > 31 || day < 1)
		{
			cout << "Enter again - ";
			cin >> day;
		}
	}
	void print()
	{
		cout << "Name - ";
		cout << name << endl;
		cout << "Surname - ";
		cout << surname << endl;
		cout << "Year of birth - ";
		cout << year << endl;
		cout << "Month of birth - ";
		cout << month << endl;
		cout << "Day of birth - ";
		cout << day << endl;
	}
};


void sortName(characteristic *mass, short size)
{
	for (short i = 1; i < size; ++i)
	{
		for (short j = 0; j < size - i; j++)
		{
			if (mass[j].name < mass[j + 1].name)
				swap(mass[j], mass[j + 1]);
		}
	}
	for (short i = 0; i < size; i++)
	{
		mass[i].print();
	}
	Sleep(2500);
}
void sortSurname(characteristic *mass, short size)
{
	for (short i = 1; i < size; ++i)
	{
		for (short j = 0; j < size - i; j++)
		{
			if (mass[j].surname < mass[j + 1].surname)
				swap(mass[j], mass[j + 1]);
		}
	}
	for (short i = 0; i < size; i++)
	{
		mass[i].print();
	}
	Sleep(2500);
}
void sortMonth(characteristic *mass, short size, short month)
{
	bool quanter = false;
	for (short i = 0; i < size; i++)
	{
		if (month == mass[i].month)
		{
			quanter = true;
			mass[i].print();
			cout << endl;
		}
		else if (i == size - 1 && false == quanter)
			cout << "Not found" << endl;
	}
	Sleep(2500);
}
void changeSize(characteristic *mass, short &size)
{
		size++;
		characteristic* massNew = new characteristic[size];
		for (short i = 0; i < size - 1; i++)
		{
			massNew[i] = mass[i];
		}
		mass = new characteristic[size];
		for (short i = 0; i < size - 1; i++)
		{
			mass[i] = massNew[i];
		}
}
void Delete(characteristic* mass, short& size)
{

	short year = 0;
	cout << "Year of birth people what you want to delete - ";
	cin >> year;
	while (year > 2019 || year < 1)
	{
		cout << "Enter again - ";
		cin >> year;
	}
	for (short i = 0; i < size; i++)
	{
		if (year == mass[i].year)
		{
			for (short j = i; j < size - 1; j++)
				swap(mass[j],mass[j+1]);
			size--;
			i--;
		}
	}
}
void SearchName(characteristic* mass, short size)
{
	string search;
	cout << "Enter searching name - ";
	cin >> search;
	for (short i = 0; i < size; i++)
	{
		if (search == mass[i].name)
			mass[i].print();
	}
}

void SearchSurname(characteristic* mass, short size)
{
	string search;
	cout << "Enter searching surname - ";
	cin >> search;
	for (short i = 0; i < size; i++)
	{
		if (search == mass[i].surname)
			mass[i].print();
	}
}
int main() {

	short size = 32767;
	characteristic *person = new characteristic[size];
	short choice = 1;
	bool exit = true;
	short i = 0;
	for (; i < size && choice == 1; i++)
	{
		system("cls");
		cout << "Person #" << i + 1 << endl;
		person[i].input();
		cout << endl;
		cout << "Continue? (1. Yes. 2. No) - ";
		cin >> choice;
	}
	system("cls");
	size = i;
	changeSize(person, --size);
	do
	{
		system("cls");
		cout << "1. Print sort list " << endl; // +
		cout << "2. Print list by birth date" << endl; //+
		cout << "3. Add record" << endl; //+
		cout << "4. Delete record" << endl; //+
		cout << "5. Search by name/surname" << endl;
		cout << "6. Print all people" << endl; //+
		cout << "7. Exit" << endl;
		cin >> choice;
		while (choice > 7 || choice < 1)
		{
			cout << "Enter again - ";
			cin >> choice;
		}
		system("cls");
		switch (choice)
		{
		case 1:
		{
			cout << "Sort by (1)name or (2)surname - ";
			cin >> choice;
			while (choice != 2 && choice != 1)
			{
				cout << "Enter again - ";
				cin >> choice;
			}
			switch (choice)
			{
			case 1:
			{
				sortName(person, size);
				break;
			}
			case 2:
			{
				sortSurname(person, size);
				break;
			}
			}
			break;
		} 
		// sort name/surname
		case 2:
		{
			cout << "Enter month - ";
			while (choice > 12 || choice < 1)
			{
				cout << "Enter again - ";
				cin >> choice;
			}
			cin >> choice;
			sortMonth(person, size, choice);
			break;
		}
		// sort month
		case 3:
		{
			changeSize(person, size);
			person[size - 1].input();
			break;
		}
		case 4:
		{
			Delete(person, size);
			break;
		}
		case 5:
		{
			cout << "Search by (1)name or (2)surname - ";
			cin >> choice;
			while (choice != 2 && choice != 1)
			{
				cout << "Enter again - ";
				cin >> choice;
			}
			switch (choice)
			{
			case 1:
			{
				SearchName(person, size);
				break;
			}
			case 2:
			{
				SearchSurname(person, size);
				break;
			}
			}
			Sleep(2500);
			break;
		}
		case 6:
		{
			for (short i = 0; i < size; i++)
			{
				person[i].print();
				cout << endl;
			}
			Sleep(2500);
			break;
		}
		case 7:
		{
			exit = false;
			break;
		}
		default:
			break;
		}

	} while (exit == true);


	system("pause");
	return 0;
}
